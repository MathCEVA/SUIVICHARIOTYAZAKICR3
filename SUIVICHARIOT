<!DOCTYPE html>
<html lang="fr">
<head>
  <meta charset="UTF-8">
  <title>SUIVI DES CHARIOTS</title>
  <style>
    body {
      font-family: Arial, sans-serif;
      background: #f8f9fa;
      padding: 20px;
    }

    h2 { 
      text-align: center;
      font-size: 2rem;
    }

    .container {
      display: flex;
      gap: 20px;
      width: 95%;
      margin: 0 auto;
      align-items: flex-start;
    }

    .form-container {
      width: 35%;
      background: #fff;
      padding: 15px;
      border-radius: 10px;
      box-shadow: 0 2px 6px rgba(0,0,0,0.2);
    }

    .table-container {
      width: 60%;
      display: flex;
      flex-direction: column;
      gap: 20px;
    }

    table {
      border-collapse: collapse;
      width: 100%;
      background: white;
      box-shadow: 0 2px 6px rgba(0,0,0,0.2);
    }

    th, td {
      border: 1px solid #ccc;
      padding: 10px;
      text-align: center;
    }

    /* Couleurs différentes pour chaque tableau */
    #tableMain th { background: #28a745; color: white; }
    #tableBody th { background: #fd7e14; color: white; }
    #tablePdb th { background: #6f42c1; color: white; }

    #tableMain { border: 2px solid #28a745; }
    #tableBody { border: 2px solid #fd7e14; }
    #tablePdb { border: 2px solid #6f42c1; }

    .soon { background: #ffc107; color: black; font-weight: bold; }
    .ok { background: #28a745; color: white; font-weight: bold; }
    .overdue { background: #dc3545; color: white; font-weight: bold; }

    .button-group { margin-top: 10px; }
    .button-group button {
      margin-right: 10px;
      padding: 10px 15px;
      background: #007bff;
      color: white;
      border: none;
      border-radius: 5px;
      cursor: pointer;
    }
    .button-group button:hover { background: #0056b3; }

    /* Popup plein écran */
    .popup {
      position: fixed;
      top: 0;
      left: 0;
      width: 100vw;
      height: 100vh;
      background-color: rgba(220, 53, 69, 0.9);
      color: white;
      display: flex;
      justify-content: center;
      align-items: center;
      font-size: 6rem;
      z-index: 9999;
      cursor: pointer;
      text-align: center;
      padding: 20px;
      box-sizing: border-box;
    }

    .validate-btn {
      padding: 5px 10px;
      background: #17a2b8;
      color: white;
      border: none;
      border-radius: 5px;
      cursor: pointer;
    }
    .validate-btn:hover { background: #117a8b; }

    /* Titres centrés et colorés selon famille */
    .title-main {
      background-color: #28a745;
      color: white;
      text-align: center;
      padding: 5px 0;
      border-radius: 5px;
margin: 0;
    }
    .title-body {
      background-color: #fd7e14;
      color: white;
      text-align: center;
      padding: 5px 0;
      border-radius: 5px;
margin: 0;
    }
    .title-pdb {
      background-color: #6f42c1;
      color: white;
      text-align: center;
      padding: 5px 0;
      border-radius: 5px;
margin: 0;
    }
  </style>
</head>
<body>

<h2>SUIVI DES CHARIOTS YAZAKI CR3</h2>

<div class="container">
  <!-- FORMULAIRE À GAUCHE -->
  <div class="form-container">
    <form id="chariotForm">
      <label>Numéro de chariot :</label>
      <input type="number" id="numChariot" required>

      <label>Heure du 1er OF :</label>
      <input type="time" id="heureOF" required>

      <div class="button-group">
        <button type="button" data-famille="MAIN">MAIN</button>
        <button type="button" data-famille="BODY">BODY</button>
        <button type="button" data-famille="PDB">PDB</button>
      </div>
    </form>
  </div>

  <!-- TABLEAUX À DROITE -->
  <div class="table-container">
    <div>
      <h3 class="title-main">MAIN</h3>
      <table id="tableMain">
        <thead><tr><th>N° Chariot</th><th>Temps restant</th><th>Valider</th></tr></thead>
        <tbody></tbody>
      </table>
    </div>

    <div>
      <h3 class="title-body">BODY</h3>
      <table id="tableBody">
        <thead><tr><th>N° Chariot</th><th>Temps restant</th><th>Valider</th></tr></thead>
        <tbody></tbody>
      </table>
    </div>

    <div>
      <h3 class="title-pdb">PDB</h3>
      <table id="tablePdb">
        <thead><tr><th>N° Chariot</th><th>Temps restant</th><th>Valider</th></tr></thead>
        <tbody></tbody>
      </table>
    </div>
  </div>
</div>

<script>
const tableMain = document.querySelector("#tableMain tbody");
const tableBody = document.querySelector("#tableBody tbody");
const tablePdb  = document.querySelector("#tablePdb tbody");

const form = document.getElementById("chariotForm");
const buttons = form.querySelectorAll(".button-group button");

// Fonction pour jouer un bip sonore
function playBeep() {
  const ctx = new (window.AudioContext || window.webkitAudioContext)();
  const o = ctx.createOscillator();
  const g = ctx.createGain();
  o.type = "sine";
  o.frequency.value = 1000;
  o.connect(g);
  g.connect(ctx.destination);
  o.start();
  o.stop(ctx.currentTime + 0.3);
}

// Ajouter un chariot selon le bouton choisi
buttons.forEach(btn => {
  btn.addEventListener("click", () => {
    const famille = btn.dataset.famille;
    const numChariot = document.getElementById("numChariot").value;
    const heureOF = document.getElementById("heureOF").value;

    if(!numChariot || !heureOF) return alert("Veuillez remplir le numéro et l'heure du 1er OF.");

    let delai = (famille === "MAIN" || famille === "BODY") ? 32 : 20;
    const [h, m] = heureOF.split(":").map(Number);
    const exp = new Date();
    exp.setHours(h, m, 0, 0);
    exp.setMinutes(exp.getMinutes() + delai);

    const row = document.createElement("tr");
    row.dataset.famille = famille; 
    row.innerHTML = `
      <td>${numChariot}</td>
      <td class="countdown" data-exp="${exp.toISOString()}"></td>
      <td><button class="validate-btn">Valider</button></td>
    `;

    row.querySelector(".validate-btn").addEventListener("click", () => row.remove());

    if(famille==="MAIN") tableMain.appendChild(row);
    else if(famille==="BODY") tableBody.appendChild(row);
    else if(famille==="PDB") tablePdb.appendChild(row);

    form.reset();
  });
});

// Mise à jour des comptes à rebours et popups
function updateCountdowns() {
  const now = new Date();

  document.querySelectorAll(".countdown").forEach(cell => {
    const exp = new Date(cell.dataset.exp);
    let diff = exp - now;

    if(diff < 0) {
      const totalSec = Math.ceil(-diff / 1000);
      const hrs = String(Math.floor(totalSec / 3600)).padStart(2,'0');
      const mins = String(Math.floor((totalSec % 3600)/60)).padStart(2,'0');
      const secs = String(totalSec % 60).padStart(2,'0');
      cell.textContent = `-${hrs}:${mins}:${secs}`;
      cell.className = "countdown overdue";
    } else {
      const hrs = String(Math.floor(diff / 3600000)).padStart(2,'0');
      const mins = String(Math.floor((diff % 3600000)/60000)).padStart(2,'0');
      const secs = String(Math.floor((diff % 60000)/1000)).padStart(2,'0');
      cell.textContent = `${hrs}:${mins}:${secs}`;
      cell.className = diff <= 5*60*1000 ? "countdown soon" : "countdown ok";

      if(diff <= 15000 && !cell.dataset.alerted) {
        const num = cell.parentElement.children[0].textContent;
        const fam = cell.parentElement.dataset.famille;
        showPopup(num, fam);
        playBeep();
        cell.dataset.alerted = "true";
      }
    }
  });
}
setInterval(updateCountdowns, 1000);

// Fonction pour afficher les popups plein écran
function showPopup(num, fam) {
  const popup = document.createElement("div");
  popup.className = "popup";
  popup.textContent = `⚠️ Chariot ${num} ${fam} doit être livré !`;
  popup.addEventListener("click", () => popup.remove());
  document.body.appendChild(popup);
}
</script>

</body>
</html>
